# Docker compose environment variables sample
# ============================================
# - Update values and rename this file to '.env' so docker compose automatically loads these environment variables and uses them when composing the services configs
# - You can also keep the file as it is and include it from the CLI:
# docker compose -f docker-compose.integration.yml --env-file dotenv_docker_compose_example.env config/up/down

# Docker image registry and tag
DOCKER_REGISTRY=incisive.azurecr.io
MAAS_HOSTNAME=maas
MAAS_PORT=8000
MAAS_TAG=2.0.3-alpha.1
MAAS_SCRIPTS="/path/to/incisive_platform_maas/usage_scripts"
MAAS_SCRIPTS_POPULATED="/path/to/incisive_platform_populated_usage_scripts"
MAAS_STORAGE_LOCAL_PATH="/path/to/incisive_platform_maas/storage"

ORCHESTRATOR_HOSTNAME=orchestrator
ORCHESTRATOR_PORT=8000
ORCHESTRATOR_SCRIPTS="/path/to/incisive_platform_orchestrator/usage_scripts"
WORKDIR="/usr/application"

# MAAS
DEBUG=true
MAAS_ALLOWED_HOSTS=127.0.0.1,${MAAS_HOSTNAME}
MAAS_MEDIA_ROOT="${WORKDIR}/storage/files"
MAAS_MEDIA_URL="${WORKDIR}/storage/files"
VALID_DATA_PARTNERS="uns,uns-rm2,auth,auth-rm2,uoa,uoa-rm2"
VALID_AI_ENGINE_FUNCTIONALITIES=
VALID_AI_ENGINE_DATA_TYPES="breast_cancer_mammography,breast_cancer_mri,lung_cancer_x_ray,lung_cancer_ct_scan,lung_cancer_pet_ct_scan,colorectal_cancer_mri,colorectal_cancer_he_stain,prostate_cancer_mri"
VALID_AI_ENGINE_ROLE_TYPES="classification,segmentation,report_generation"
MAAS_WORKERS_TIMEOUT=60
MAAS_WORKERS=3

# ORCHESTRATOR
MAAS_API_HOSTNAME="maas:8000"
ORCHESTRATOR_ALLOWED_HOSTS=127.0.0.1,${ORCHESTRATOR_HOSTNAME}
VALIDATE_WITH_MAAS=false
PLATFORM_CENTRAL_NODE_LABEL_KEY=fakeCloudNode
PLATFORM_CENTRAL_NODE_LABEL_VALUE=fakeCloudNode
ARGO_WORKFLOWS_NAMESPACE=argo
COMMUNICATION_ADAPTER=kafka
